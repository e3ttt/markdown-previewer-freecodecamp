{"version":3,"sources":["actions/actions.js","components/initialText.js","components/Editor.js","components/Previewer.js","App.js","reportWebVitals.js","store/store.js","reducers/textReducer.js","index.js"],"names":["ADD_TEXT","initialText","Editor","useState","text","setText","dispatch","useDispatch","id","value","onChange","event","target","type","addText","Previewer","useSelector","state","marked","setOptions","breaks","dangerouslySetInnerHTML","__html","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAAaA,EAAW,WCAXC,EAAW,irCCuBTC,EAjBA,WAAO,IAAD,EACKC,mBAASF,GADd,mBACZG,EADY,KACNC,EADM,KAEbC,EAAWC,cAOjB,OACE,gCACE,wCACA,0BAAUC,GAAG,SAASC,MAAOL,EAAMM,SARd,SAAAC,GACvBN,EAAQM,EAAMC,OAAOH,OACrBH,EFVmB,SAAAF,GACrB,MAAO,CAAES,KAAMb,EAAUI,QESdU,CAAQH,EAAMC,OAAOH,e,gBCOnBM,EAfG,WAChB,IAAMX,EAAOY,aAAY,SAAAC,GAAK,OAAIA,KAMlC,OAJAC,IAAOC,WAAW,CAChBC,QAAQ,IAIR,gCACE,oBAAIZ,GAAG,gBAAP,uBACA,qBAAKA,GAAG,UAAUa,wBAAyB,CAAEC,OAAQJ,IAAOd,UCInDmB,MAbf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,sBAAf,SACE,cAAC,EAAD,UCAOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDCQ,EAFDC,aCDa,WAAkC,IAAjClB,EAAgC,uDAAxBhB,EAAamC,EAAW,uCAC1D,OAAQA,EAAOvB,MACb,KAAKb,EACH,OAAOoC,EAAOhC,KAChB,QACE,OAAOa,MCCboB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.8eeafc57.chunk.js","sourcesContent":["export const ADD_TEXT = 'ADD_TEXT';\n\nexport const addText = text => {\n  return { type: ADD_TEXT, text };\n};\n","export const initialText = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/320px-React-icon.svg.png)\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addText } from '../actions/actions';\nimport { initialText } from './initialText';\n\nconst Editor = () => {\n  const [text, setText] = useState(initialText);\n  const dispatch = useDispatch();\n\n  const handleChangeText = event => {\n    setText(event.target.value);\n    dispatch(addText(event.target.value));\n  };\n\n  return (\n    <div>\n      <h2>Editor</h2>\n      <textarea id=\"editor\" value={text} onChange={handleChangeText} />\n    </div>\n  );\n};\n\nexport default Editor;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport marked from 'marked';\n\nconst Previewer = () => {\n  const text = useSelector(state => state);\n\n  marked.setOptions({\n    breaks: true,\n  });\n\n  return (\n    <div>\n      <h2 id=\"preview-title\">Previewer</h2>\n      <div id=\"preview\" dangerouslySetInnerHTML={{ __html: marked(text) }} />\n    </div>\n  );\n};\n\nexport default Previewer;\n","import './App.css';\n\nimport Editor from './components/Editor';\nimport Previewer from './components/Previewer';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"editor-container\">\n        <Editor />\n      </div>\n      <div className=\"previewer-container\">\n        <Previewer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux';\n\nimport { textReducer } from '../reducers/textReducer';\n\nconst store = createStore(textReducer);\n\nexport default store;\n","import { ADD_TEXT } from '../actions/actions';\nimport { initialText } from '../components/initialText';\n\nexport const textReducer = (state = initialText, action) => {\n  switch (action.type) {\n    case ADD_TEXT:\n      return action.text;\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}